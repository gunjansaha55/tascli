#!/usr/bin/env zsh
# zsh completion support for tascli v0.1.0

autoload -U is-at-least

# shellcheck disable=SC2154
(( $+functions[__tascli_complete] )) ||
function __tascli_complete {
  local name="$1"; shift
  local action="$1"; shift
  integer ret=1
  local -a values
  local expl lines
  _tags "$name"
  while _tags; do
    if _requested "$name"; then
      # shellcheck disable=SC2034
      lines="$(tascli completions complete "${action}" "${@}")"
      values=("${(ps:\n:)lines}")
      if (( ${#values[@]} )); then
        while _next_label "$name" expl "$action"; do
          compadd -S '' "${expl[@]}" "${values[@]}"
        done
      fi
    fi
  done
}

# shellcheck disable=SC2154
(( $+functions[_tascli] )) ||
function _tascli() {
  local state

  function _commands() {
    local -a commands
    # shellcheck disable=SC2034
    commands=(
      'completions:Generate shell completions.'
      'create:Create a new task.'
    )
    _describe 'command' commands
  }

  function _command_args() {
    case "${words[1]}" in
      completions) _tascli_completions ;;
      create) _tascli_create ;;
    esac
  }

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]' \
    '(- *)'{-V,--version}'[Show the version number for this program.]' \
    '1:command:_commands' \
    '*::sub command:->command_args'

  case "$state" in
    command_args) _command_args ;;
  esac
}

# shellcheck disable=SC2154
(( $+functions[_tascli_completions] )) ||
function _tascli_completions() {

  function _commands() {
    local -a commands
    # shellcheck disable=SC2034
    commands=(
      'bash:Generate shell completions for bash.'
      'fish:Generate shell completions for fish.'
      'zsh:Generate shell completions for zsh.'
    )
    _describe 'command' commands
  }

  function _command_args() {
    case "${words[1]}" in
      bash) _tascli_completions_bash ;;
      fish) _tascli_completions_fish ;;
      zsh) _tascli_completions_zsh ;;
    esac
  }

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]' \
    '1:command:_commands' \
    '*::sub command:->command_args'

  case "$state" in
    command_args) _command_args ;;
  esac
}

# shellcheck disable=SC2154
(( $+functions[_tascli_completions_bash] )) ||
function _tascli_completions_bash() {

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]'
}

# shellcheck disable=SC2154
(( $+functions[_tascli_completions_fish] )) ||
function _tascli_completions_fish() {

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]'
}

# shellcheck disable=SC2154
(( $+functions[_tascli_completions_zsh] )) ||
function _tascli_completions_zsh() {

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]'
}

# shellcheck disable=SC2154
(( $+functions[_tascli_create] )) ||
function _tascli_create() {

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]' \
    '1:command:_commands'\
    '2::tag:->tag-tagType'

  case "$state" in
    tag-tagType) __tascli_complete tag tagType create ;;
  esac
}

# _tascli "${@}"

compdef _tascli tascli